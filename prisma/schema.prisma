// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  password      String?   // Add this field
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model Hospital {
  id        String    @id @default(cuid())
  name      String
  wards     Ward[]
  patients  Patient[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Ward {
  id            String    @id @default(cuid())
  name          String
  hospitalId    String
  hospital      Hospital  @relation(fields: [hospitalId], references: [id])
  beds          Bed[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  @@index([hospitalId])
}

model Bed {
  id           String    @id @default(cuid())
  bedNumber    String
  status       BedStatus @default(AVAILABLE)
  wardId       String
  ward         Ward      @relation(fields: [wardId], references: [id])
  patient      Patient?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  @@index([wardId])
}

model Patient {
  id                  String    @id @default(cuid())
  firstName           String
  lastName            String
  dateOfBirth         DateTime
  gender              Gender
  phoneNumber         String?
  medicalRecordNumber String    @unique
  hospitalId          String
  hospital            Hospital  @relation(fields: [hospitalId], references: [id])
  bedId               String?   @unique
  bed                 Bed?      @relation(fields: [bedId], references: [id])
  admissionDate       DateTime  @default(now())
  discharged          Boolean   @default(false)
  dischargeDate       DateTime?
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt

  @@index([hospitalId])
  @@index([bedId])
}
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
// Enums
enum BedStatus {
  AVAILABLE
  OCCUPIED
  MAINTENANCE
}

enum Gender {
  MALE
  FEMALE
  OTHER
}